/*
Sonatype Lifecycle Public REST API

Testing ConfigArtifactoryConnectionAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package sonatypeiq

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	sonatypeiq "github.com/4077/nexus-iq-api-client-go"
)

func Test_sonatypeiq_ConfigArtifactoryConnectionAPIService(t *testing.T) {

	configuration := sonatypeiq.NewConfiguration()
	apiClient := sonatypeiq.NewAPIClient(configuration)

	t.Run("Test ConfigArtifactoryConnectionAPIService AddArtifactoryConnection", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var ownerType string
		var internalOwnerId string

		resp, httpRes, err := apiClient.ConfigArtifactoryConnectionAPI.AddArtifactoryConnection(context.Background(), ownerType, internalOwnerId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigArtifactoryConnectionAPIService DeleteArtifactoryConnection", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var ownerType string
		var internalOwnerId string
		var artifactoryConnectionId string

		httpRes, err := apiClient.ConfigArtifactoryConnectionAPI.DeleteArtifactoryConnection(context.Background(), ownerType, internalOwnerId, artifactoryConnectionId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigArtifactoryConnectionAPIService GetArtifactoryConnection", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var ownerType string
		var internalOwnerId string
		var artifactoryConnectionId string

		resp, httpRes, err := apiClient.ConfigArtifactoryConnectionAPI.GetArtifactoryConnection(context.Background(), ownerType, internalOwnerId, artifactoryConnectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigArtifactoryConnectionAPIService GetOwnerArtifactoryConnection", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var ownerType string
		var internalOwnerId string

		resp, httpRes, err := apiClient.ConfigArtifactoryConnectionAPI.GetOwnerArtifactoryConnection(context.Background(), ownerType, internalOwnerId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigArtifactoryConnectionAPIService TestArtifactoryConnection", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var ownerType string
		var internalOwnerId string

		resp, httpRes, err := apiClient.ConfigArtifactoryConnectionAPI.TestArtifactoryConnection(context.Background(), ownerType, internalOwnerId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigArtifactoryConnectionAPIService TestArtifactoryConnection1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var ownerType string
		var internalOwnerId string
		var artifactoryConnectionId string

		resp, httpRes, err := apiClient.ConfigArtifactoryConnectionAPI.TestArtifactoryConnection1(context.Background(), ownerType, internalOwnerId, artifactoryConnectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigArtifactoryConnectionAPIService UpdateArtifactoryConnection", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var ownerType string
		var internalOwnerId string
		var artifactoryConnectionId string

		resp, httpRes, err := apiClient.ConfigArtifactoryConnectionAPI.UpdateArtifactoryConnection(context.Background(), ownerType, internalOwnerId, artifactoryConnectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ConfigArtifactoryConnectionAPIService UpdateOwnerArtifactoryConnectionStatus", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var ownerType string
		var internalOwnerId string

		httpRes, err := apiClient.ConfigArtifactoryConnectionAPI.UpdateOwnerArtifactoryConnectionStatus(context.Background(), ownerType, internalOwnerId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
