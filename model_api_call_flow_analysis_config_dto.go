/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.175.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the ApiCallFlowAnalysisConfigDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCallFlowAnalysisConfigDTO{}

// ApiCallFlowAnalysisConfigDTO struct for ApiCallFlowAnalysisConfigDTO
type ApiCallFlowAnalysisConfigDTO struct {
	Algorithm *string `json:"algorithm,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Id *string `json:"id,omitempty"`
	Namespaces []string `json:"namespaces,omitempty"`
	OwnerId *string `json:"ownerId,omitempty"`
	ThreadCount *int32 `json:"threadCount,omitempty"`
}

// NewApiCallFlowAnalysisConfigDTO instantiates a new ApiCallFlowAnalysisConfigDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCallFlowAnalysisConfigDTO() *ApiCallFlowAnalysisConfigDTO {
	this := ApiCallFlowAnalysisConfigDTO{}
	return &this
}

// NewApiCallFlowAnalysisConfigDTOWithDefaults instantiates a new ApiCallFlowAnalysisConfigDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCallFlowAnalysisConfigDTOWithDefaults() *ApiCallFlowAnalysisConfigDTO {
	this := ApiCallFlowAnalysisConfigDTO{}
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *ApiCallFlowAnalysisConfigDTO) GetAlgorithm() string {
	if o == nil || IsNil(o.Algorithm) {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCallFlowAnalysisConfigDTO) GetAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.Algorithm) {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *ApiCallFlowAnalysisConfigDTO) HasAlgorithm() bool {
	if o != nil && !IsNil(o.Algorithm) {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *ApiCallFlowAnalysisConfigDTO) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApiCallFlowAnalysisConfigDTO) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCallFlowAnalysisConfigDTO) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApiCallFlowAnalysisConfigDTO) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApiCallFlowAnalysisConfigDTO) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiCallFlowAnalysisConfigDTO) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCallFlowAnalysisConfigDTO) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiCallFlowAnalysisConfigDTO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiCallFlowAnalysisConfigDTO) SetId(v string) {
	o.Id = &v
}

// GetNamespaces returns the Namespaces field value if set, zero value otherwise.
func (o *ApiCallFlowAnalysisConfigDTO) GetNamespaces() []string {
	if o == nil || IsNil(o.Namespaces) {
		var ret []string
		return ret
	}
	return o.Namespaces
}

// GetNamespacesOk returns a tuple with the Namespaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCallFlowAnalysisConfigDTO) GetNamespacesOk() ([]string, bool) {
	if o == nil || IsNil(o.Namespaces) {
		return nil, false
	}
	return o.Namespaces, true
}

// HasNamespaces returns a boolean if a field has been set.
func (o *ApiCallFlowAnalysisConfigDTO) HasNamespaces() bool {
	if o != nil && !IsNil(o.Namespaces) {
		return true
	}

	return false
}

// SetNamespaces gets a reference to the given []string and assigns it to the Namespaces field.
func (o *ApiCallFlowAnalysisConfigDTO) SetNamespaces(v []string) {
	o.Namespaces = v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *ApiCallFlowAnalysisConfigDTO) GetOwnerId() string {
	if o == nil || IsNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCallFlowAnalysisConfigDTO) GetOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *ApiCallFlowAnalysisConfigDTO) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *ApiCallFlowAnalysisConfigDTO) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetThreadCount returns the ThreadCount field value if set, zero value otherwise.
func (o *ApiCallFlowAnalysisConfigDTO) GetThreadCount() int32 {
	if o == nil || IsNil(o.ThreadCount) {
		var ret int32
		return ret
	}
	return *o.ThreadCount
}

// GetThreadCountOk returns a tuple with the ThreadCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCallFlowAnalysisConfigDTO) GetThreadCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ThreadCount) {
		return nil, false
	}
	return o.ThreadCount, true
}

// HasThreadCount returns a boolean if a field has been set.
func (o *ApiCallFlowAnalysisConfigDTO) HasThreadCount() bool {
	if o != nil && !IsNil(o.ThreadCount) {
		return true
	}

	return false
}

// SetThreadCount gets a reference to the given int32 and assigns it to the ThreadCount field.
func (o *ApiCallFlowAnalysisConfigDTO) SetThreadCount(v int32) {
	o.ThreadCount = &v
}

func (o ApiCallFlowAnalysisConfigDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCallFlowAnalysisConfigDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Algorithm) {
		toSerialize["algorithm"] = o.Algorithm
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Namespaces) {
		toSerialize["namespaces"] = o.Namespaces
	}
	if !IsNil(o.OwnerId) {
		toSerialize["ownerId"] = o.OwnerId
	}
	if !IsNil(o.ThreadCount) {
		toSerialize["threadCount"] = o.ThreadCount
	}
	return toSerialize, nil
}

type NullableApiCallFlowAnalysisConfigDTO struct {
	value *ApiCallFlowAnalysisConfigDTO
	isSet bool
}

func (v NullableApiCallFlowAnalysisConfigDTO) Get() *ApiCallFlowAnalysisConfigDTO {
	return v.value
}

func (v *NullableApiCallFlowAnalysisConfigDTO) Set(val *ApiCallFlowAnalysisConfigDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCallFlowAnalysisConfigDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCallFlowAnalysisConfigDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCallFlowAnalysisConfigDTO(val *ApiCallFlowAnalysisConfigDTO) *NullableApiCallFlowAnalysisConfigDTO {
	return &NullableApiCallFlowAnalysisConfigDTO{value: val, isSet: true}
}

func (v NullableApiCallFlowAnalysisConfigDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCallFlowAnalysisConfigDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


